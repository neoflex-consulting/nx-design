import './Breadcrumbs.css';
import React from 'react';
import { IconProps } from '../../icons/Icon/Icon';
import { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';
export declare const breadcrumbPropSize: readonly ["m", "xs", "s", "l"];
export declare type BreadcrumbPropSize = typeof breadcrumbPropSize[number];
export declare const breadcrumbPropSizeDefault: BreadcrumbPropSize;
export declare const cnBreadcrumbs: import("@bem-react/classname").ClassNameFormatter;
export declare type BreadcrumbsPropGetLabel<ITEM> = (item: ITEM) => string | React.ReactNode;
export declare type BreadcrumbsPropGetIsActive<ITEM> = (item: ITEM) => boolean;
export declare type BreadcrumbsPropGetLink<ITEM> = (item: ITEM) => string;
export declare type BreadcrumbsPropGetIcon<ITEM> = (item: ITEM) => React.FC<IconProps> | undefined;
export declare type BreadcrumbsProps<ITEM> = {
    pages: ITEM[];
    getLabel: BreadcrumbsPropGetLabel<ITEM>;
    getIsActive?: BreadcrumbsPropGetIsActive<ITEM>;
    getLink: BreadcrumbsPropGetLink<ITEM>;
    getIcon?: BreadcrumbsPropGetIcon<ITEM>;
    size?: BreadcrumbPropSize;
    maxCount?: number;
    onClick?: (page: ITEM, e: React.MouseEvent) => void;
    onlyIconRoot?: boolean;
    className?: string;
};
declare type Breadcrumbs = <ITEM>(props: PropsWithHTMLAttributesAndRef<BreadcrumbsProps<ITEM>, HTMLUListElement>) => React.ReactElement | null;
export declare const Breadcrumbs: Breadcrumbs;
export {};
